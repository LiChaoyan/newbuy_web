<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xoqao.web.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xoqao.web.bean.User" >
    <id column="Uid" property="uid" jdbcType="INTEGER" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="depart" property="depart" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Uid, cellphone, imei, email, username, password, id, uname, title, depart
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xoqao.web.bean.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where Uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where Uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xoqao.web.bean.UserExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xoqao.web.bean.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="uid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (cellphone, imei, email, 
      username, password, id, 
      uname, title, depart
      )
    values (#{cellphone,jdbcType=VARCHAR}, #{imei,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, 
      #{uname,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{depart,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xoqao.web.bean.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="uid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="imei != null" >
        imei,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="id != null" >
        id,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="depart != null" >
        depart,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="depart != null" >
        #{depart,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xoqao.web.bean.UserExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.uid != null" >
        Uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.cellphone != null" >
        cellphone = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.imei != null" >
        imei = #{record.imei,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.depart != null" >
        depart = #{record.depart,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set Uid = #{record.uid,jdbcType=INTEGER},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      imei = #{record.imei,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=VARCHAR},
      uname = #{record.uname,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      depart = #{record.depart,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xoqao.web.bean.User" >
    update users
    <set >
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="depart != null" >
        depart = #{depart,jdbcType=VARCHAR},
      </if>
    </set>
    where Uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xoqao.web.bean.User" >
    update users
    set cellphone = #{cellphone,jdbcType=VARCHAR},
      imei = #{imei,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      id = #{id,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      depart = #{depart,jdbcType=VARCHAR}
    where Uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>